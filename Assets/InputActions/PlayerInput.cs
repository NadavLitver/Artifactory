//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/InputActions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""BaseMovement"",
            ""id"": ""0c53fae9-2d26-4d26-8f5f-ce10269f94b2"",
            ""actions"": [
                {
                    ""name"": ""move"",
                    ""type"": ""Value"",
                    ""id"": ""61da3e48-4f5e-4fa4-b1e7-da1710457cc5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""c9dd8064-4ed5-48e4-a6be-d7c133edd8be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""75be6cf6-c421-42cf-bb24-d037975e7f1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mobility"",
                    ""type"": ""Button"",
                    ""id"": ""00a1d698-88e8-497f-b31b-6a83575f336a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate"",
                    ""type"": ""Button"",
                    ""id"": ""e3cd3c51-04f8-4f1b-a818-29963b658d55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""fe2a3a58-6bb9-4256-92f7-2dcbd4cdb3dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""ff31d343-52fa-49d2-9872-bc8a5c984e5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouchPos"",
                    ""type"": ""Value"",
                    ""id"": ""39331bb5-a5d9-4710-8b9c-f6b1bf952fbe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchPos"",
                    ""type"": ""Value"",
                    ""id"": ""59330fc9-5853-49c0-9531-57654142feb9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""146c291c-8347-42ad-aa0c-4539ee0344e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""313a51b7-6dde-4656-ad89-fcd36e1d3884"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b6f8cd3f-c1e8-44df-aca0-146fcb52a321"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7d6948e6-59d8-4840-b59e-a7b212377e84"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f6da9905-e4ac-49b4-a747-ffc692600bb6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a9efa29-16c3-497a-be2b-8dd35b1d3594"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6ee43cc7-62db-4eb8-becf-0918df45a20f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87183e7b-0da1-4e35-9fd7-bc41d2431d2d"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""adc4a15d-5816-45b6-9635-1fcb1744cabd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e972a2ff-8696-421d-b704-5f66436601a3"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3ca398fb-3f29-4151-b14f-0dbaae591d2f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c558b3d5-3998-4b04-bd4c-a9ca98c274bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f447d79e-0bc1-40e8-8060-0719499b3dc1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce169cf8-783c-4d48-9336-a7d31306d09b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51da01b3-605f-48df-bb28-fe916eaa0cce"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mobility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d0bfa52-1c10-4b49-bcb9-52a5b576e5d9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mobility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f96c05a-ae25-4151-b342-40556cd884a8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7635810-5007-4125-a92b-380a916a6a38"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42b0669d-83a2-4737-9000-5ebe4eb88700"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59b7d1f0-5367-43dd-803a-e51854858ce8"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6875d31a-0bce-4eff-8aa3-e0d5912aa47f"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cc5616c-1dd4-4bba-b446-f583520fb35e"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36119795-a9a2-456e-9f36-5d0c187ab22d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""304d6822-1744-4a77-88c3-1e0637192e77"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ce341f1-a4b6-4cc9-8930-5b083b3afa1f"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""General"",
            ""id"": ""afe6f44e-cb7e-43db-b953-7de519fca710"",
            ""actions"": [
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""c2068f16-2efb-4c2f-9266-7803284c575f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""66b12a96-bb44-4ccd-a063-e7059a32d344"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e1795d33-8506-4e7b-820e-60897215633b"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77a726c2-bd38-4c77-a07c-5e491b5a2c50"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BaseMovement
        m_BaseMovement = asset.FindActionMap("BaseMovement", throwIfNotFound: true);
        m_BaseMovement_move = m_BaseMovement.FindAction("move", throwIfNotFound: true);
        m_BaseMovement_jump = m_BaseMovement.FindAction("jump", throwIfNotFound: true);
        m_BaseMovement_Attack = m_BaseMovement.FindAction("Attack", throwIfNotFound: true);
        m_BaseMovement_Mobility = m_BaseMovement.FindAction("Mobility", throwIfNotFound: true);
        m_BaseMovement_Ultimate = m_BaseMovement.FindAction("Ultimate", throwIfNotFound: true);
        m_BaseMovement_PrimaryTouch = m_BaseMovement.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_BaseMovement_SecondaryTouch = m_BaseMovement.FindAction("SecondaryTouch", throwIfNotFound: true);
        m_BaseMovement_PrimaryTouchPos = m_BaseMovement.FindAction("PrimaryTouchPos", throwIfNotFound: true);
        m_BaseMovement_SecondaryTouchPos = m_BaseMovement.FindAction("SecondaryTouchPos", throwIfNotFound: true);
        m_BaseMovement_Interact = m_BaseMovement.FindAction("Interact", throwIfNotFound: true);
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Reset = m_General.FindAction("Reset", throwIfNotFound: true);
        m_General_Quit = m_General.FindAction("Quit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BaseMovement
    private readonly InputActionMap m_BaseMovement;
    private IBaseMovementActions m_BaseMovementActionsCallbackInterface;
    private readonly InputAction m_BaseMovement_move;
    private readonly InputAction m_BaseMovement_jump;
    private readonly InputAction m_BaseMovement_Attack;
    private readonly InputAction m_BaseMovement_Mobility;
    private readonly InputAction m_BaseMovement_Ultimate;
    private readonly InputAction m_BaseMovement_PrimaryTouch;
    private readonly InputAction m_BaseMovement_SecondaryTouch;
    private readonly InputAction m_BaseMovement_PrimaryTouchPos;
    private readonly InputAction m_BaseMovement_SecondaryTouchPos;
    private readonly InputAction m_BaseMovement_Interact;
    public struct BaseMovementActions
    {
        private @PlayerInput m_Wrapper;
        public BaseMovementActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @move => m_Wrapper.m_BaseMovement_move;
        public InputAction @jump => m_Wrapper.m_BaseMovement_jump;
        public InputAction @Attack => m_Wrapper.m_BaseMovement_Attack;
        public InputAction @Mobility => m_Wrapper.m_BaseMovement_Mobility;
        public InputAction @Ultimate => m_Wrapper.m_BaseMovement_Ultimate;
        public InputAction @PrimaryTouch => m_Wrapper.m_BaseMovement_PrimaryTouch;
        public InputAction @SecondaryTouch => m_Wrapper.m_BaseMovement_SecondaryTouch;
        public InputAction @PrimaryTouchPos => m_Wrapper.m_BaseMovement_PrimaryTouchPos;
        public InputAction @SecondaryTouchPos => m_Wrapper.m_BaseMovement_SecondaryTouchPos;
        public InputAction @Interact => m_Wrapper.m_BaseMovement_Interact;
        public InputActionMap Get() { return m_Wrapper.m_BaseMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BaseMovementActions set) { return set.Get(); }
        public void SetCallbacks(IBaseMovementActions instance)
        {
            if (m_Wrapper.m_BaseMovementActionsCallbackInterface != null)
            {
                @move.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove;
                @move.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove;
                @move.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMove;
                @jump.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnJump;
                @Attack.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnAttack;
                @Mobility.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMobility;
                @Mobility.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMobility;
                @Mobility.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnMobility;
                @Ultimate.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUltimate;
                @Ultimate.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUltimate;
                @Ultimate.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnUltimate;
                @PrimaryTouch.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouch;
                @PrimaryTouch.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouch;
                @PrimaryTouch.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouch;
                @SecondaryTouch.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouch;
                @SecondaryTouch.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouch;
                @SecondaryTouch.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouch;
                @PrimaryTouchPos.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouchPos;
                @PrimaryTouchPos.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouchPos;
                @PrimaryTouchPos.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnPrimaryTouchPos;
                @SecondaryTouchPos.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouchPos;
                @SecondaryTouchPos.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouchPos;
                @SecondaryTouchPos.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnSecondaryTouchPos;
                @Interact.started -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_BaseMovementActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_BaseMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @move.started += instance.OnMove;
                @move.performed += instance.OnMove;
                @move.canceled += instance.OnMove;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Mobility.started += instance.OnMobility;
                @Mobility.performed += instance.OnMobility;
                @Mobility.canceled += instance.OnMobility;
                @Ultimate.started += instance.OnUltimate;
                @Ultimate.performed += instance.OnUltimate;
                @Ultimate.canceled += instance.OnUltimate;
                @PrimaryTouch.started += instance.OnPrimaryTouch;
                @PrimaryTouch.performed += instance.OnPrimaryTouch;
                @PrimaryTouch.canceled += instance.OnPrimaryTouch;
                @SecondaryTouch.started += instance.OnSecondaryTouch;
                @SecondaryTouch.performed += instance.OnSecondaryTouch;
                @SecondaryTouch.canceled += instance.OnSecondaryTouch;
                @PrimaryTouchPos.started += instance.OnPrimaryTouchPos;
                @PrimaryTouchPos.performed += instance.OnPrimaryTouchPos;
                @PrimaryTouchPos.canceled += instance.OnPrimaryTouchPos;
                @SecondaryTouchPos.started += instance.OnSecondaryTouchPos;
                @SecondaryTouchPos.performed += instance.OnSecondaryTouchPos;
                @SecondaryTouchPos.canceled += instance.OnSecondaryTouchPos;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public BaseMovementActions @BaseMovement => new BaseMovementActions(this);

    // General
    private readonly InputActionMap m_General;
    private IGeneralActions m_GeneralActionsCallbackInterface;
    private readonly InputAction m_General_Reset;
    private readonly InputAction m_General_Quit;
    public struct GeneralActions
    {
        private @PlayerInput m_Wrapper;
        public GeneralActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Reset => m_Wrapper.m_General_Reset;
        public InputAction @Quit => m_Wrapper.m_General_Quit;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterface != null)
            {
                @Reset.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnReset;
                @Quit.started -= m_Wrapper.m_GeneralActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_GeneralActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_GeneralActionsCallbackInterface.OnQuit;
            }
            m_Wrapper.m_GeneralActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
            }
        }
    }
    public GeneralActions @General => new GeneralActions(this);
    public interface IBaseMovementActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnMobility(InputAction.CallbackContext context);
        void OnUltimate(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnSecondaryTouch(InputAction.CallbackContext context);
        void OnPrimaryTouchPos(InputAction.CallbackContext context);
        void OnSecondaryTouchPos(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IGeneralActions
    {
        void OnReset(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
    }
}
